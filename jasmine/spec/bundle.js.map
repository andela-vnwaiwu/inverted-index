{"version":3,"sources":["webpack:///webpack/bootstrap bbdac13a75b3bed0d0f7","webpack:///./jasmine/spec/inverted-index-test.js","webpack:///./jasmine/books.json","webpack:///./jasmine/books1.json","webpack:///./jasmine/empty.json"],"names":["jsonfile","require","jsonfile1","emptyJson","describe","invertedIndex","InvertedIndex","books","books1","empty","beforeEach","afterEach","indexes","it","indexInstance","expect","toEqual","jasmine","any","Object","keys","length","toBe","book","readBook","readBookData","readBook2","createIndex","toBeDefined","and","of","createIndex2","getIndex","searchIndex","because","searchIndex2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bbdac13a75b3bed0d0f7","var jsonfile = require(\"../books\");\nvar jsonfile1 = require(\"../books1\");\nvar emptyJson = require(\"../empty\")\n\ndescribe(\"Inverted Index\", () => {\n  const invertedIndex = new InvertedIndex();\n  let books = jsonfile;\n  let books1 = [];\n  let empty = emptyJson;\n\n  beforeEach(() => {\n    books1 = jsonfile1;\n  });\n\n  afterEach(() => {\n    invertedIndex.indexes = {};\n  });\n  \n  it(\"should return the instance of the class\", () => {\n    let indexInstance = invertedIndex;\n    expect(indexInstance).toEqual(jasmine.any(Object));\n    expect(Object.keys(invertedIndex.indexes).length).toBe(0);\n  });\n\n  describe(\"Read book data\", () => {\n    it(\"should read the content of a json file and return false if the file is empty\", () => {\n      let book = [];\n      let readBook = invertedIndex.readBookData(book);\n      expect(readBook).toBe(false);\n    });\n    it(\"should read the content of a json file and return true if the file is not empty\", () => {\n      let book = [];\n      let readBook2 = invertedIndex.readBookData(books);\n      expect(readBook2).toBe(true);\n    });\n  });\n\n  describe(\"Populate index\", () => {\n    it(\"should create the index once the file has been read\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books).toBeDefined();\n    });\n    it(\"should return an object of all created index\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books).toEqual(jasmine.any(Object));\n    });\n    it(\"should return an array of a particular word showing indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books.and).toEqual([0,1]);\n      expect(invertedIndex.indexes.books.of).toEqual([0,1]);\n    });\n    it(\"should return false if the file Content is Empty\", () => {\n      let createIndex = invertedIndex.createIndex(\"empty\", empty);\n      expect(createIndex).toBe(false);\n    });\n    it(\"should not create the index again if the file has been uploaded before\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books\", books);\n      expect(Object.keys(invertedIndex.indexes).length).toBe(1);\n    });\n  });\n\n  describe(\"Get Index\", () => {\n    it(\"should get the indexes of a particular uploaded file\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let getIndex = invertedIndex.getIndex(\"books\");\n      expect(getIndex).toBeDefined();\n    });\n    it(\"should return an empty object for an uploaded file that has not been indexed\", () => {\n      let getIndex = invertedIndex.getIndex(\"books\");\n      expect(getIndex).toEqual({});\n    });\n    it(\"should get all the indexes of all uploaded file\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      expect(Object.keys(getIndex).length).toBe(2);\n    });\n    it(\"should return an empty object if no indexes has been created\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      expect(Object.keys(getIndex).length).toBe(2);\n    });\n  });\n\n  describe(\"Search Index\", () => {\n    it(\"should return an array of the index of the words in the file and the word\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let getIndex = invertedIndex.getIndex(\"books\");\n      let searchIndex = invertedIndex.searchIndex(\"and\");\n      expect(searchIndex[0].books.and).toEqual([0,1]);\n    });\n    it(\"should return null for a word not found in the file\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let getIndex = invertedIndex.getIndex(\"books\");\n      let searchIndex = invertedIndex.searchIndex(\"because\");\n      expect(searchIndex[0].books.because).toBe(null);\n    });\n    it(\"should return an array of Objects containing the search parameter, the files and their indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      let searchIndex = invertedIndex.searchIndex(\"and\");\n      expect(searchIndex[0].books.and).toEqual([0,1]);\n      expect(searchIndex[1].books1.and).toEqual([0,1]);\n    });\n    it(\"should return an array of Objects containing the search parameter in the selected file and its indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      let searchIndex = invertedIndex.searchIndex(\"and\", \"books\");\n      let searchIndex2 = invertedIndex.searchIndex(\"and\", \"books1\");\n      expect(searchIndex[0].books.and).toEqual([0,1]);\n      expect(Object.keys(searchIndex[0]).length).toBe(1);\n      expect(searchIndex2[0].books1.and).toEqual([0,1]);\n      expect(Object.keys(searchIndex2[0]).length).toBe(1);\n    });\n  });\n});\n\n\n// WEBPACK FOOTER //\n// ./jasmine/spec/inverted-index-test.js","module.exports = [\n\t{\n\t\t\"title\": \"Alice in Wonderland\",\n\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t},\n\t{\n\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books.json\n// module id = 1\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"title\": \"Harry Porter and the prisoner of azkaban\",\n\t\t\"text\": \"Harry porter tries to eat rice and beans in the prisoner of azkaban.\"\n\t},\n\t{\n\t\t\"title\": \"The wizard of OZ.\",\n\t\t\"text\": \"A wizard comes to town with a powerful ring and falls into a rabbit hole.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books1.json\n// module id = 2\n// module chunks = 0","module.exports = [];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/empty.json\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}