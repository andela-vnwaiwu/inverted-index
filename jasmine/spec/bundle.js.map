{"version":3,"sources":["webpack:///webpack/bootstrap 8479622156fa6cba345f","webpack:///./jasmine/spec/inverted-index-test.js","webpack:///./jasmine/src/inverted-index.js","webpack:///./jasmine/books.json","webpack:///./jasmine/books1.json"],"names":["InvertedIndex","require","jsonfile","jsonfile1","describe","invertedIndex","books","books1","beforeEach","afterEach","indexes","it","indexInstance","expect","toEqual","jasmine","any","Object","keys","length","toBe","book","readBook","readBookData","readBook2","createIndex","toBeDefined","and","of","getIndex","createIndex2","searchIndex","searchIndex2","bookName","arrayItem","element","parseInt","item","hasOwnProperty","push","indexOf","name","fileContent","indexArray","forEach","text","title","textArray","textToArray","textIndex","_sortIndex","answer","term","indexFile","key","undefined","terms","result","fileResult","_getTermResult","toLowerCase","replace","split","module","exports"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8479622156fa6cba345f","var InvertedIndex = require(\"../src/inverted-index.js\");\nvar jsonfile = require(\"../books\");\nvar jsonfile1 = require(\"../books1\");\n\ndescribe(\"Inverted Index\", () => {\n  const invertedIndex = new InvertedIndex();\n  let books = jsonfile;\n  let books1 = [];\n\n  beforeEach(() => {\n    books1 = jsonfile1;\n  });\n\n  afterEach(() => {\n    invertedIndex.indexes = {};\n  });\n  \n  it(\"should return the instance of the class\", () => {\n    let indexInstance = invertedIndex;\n    expect(indexInstance).toEqual(jasmine.any(Object));\n    expect(Object.keys(invertedIndex.indexes).length).toBe(0);\n  });\n\n  describe(\"Read book data\", () => {\n    it(\"should read the content of a json file and return false if the file is empty\", () => {\n      let book = [];\n      let readBook = invertedIndex.readBookData(book);\n      expect(readBook).toBe(false);\n    });\n    it(\"should read the content of a json file and return true if the file is not empty\", () => {\n      let book = [];\n      let readBook2 = invertedIndex.readBookData(books);\n      expect(readBook2).toBe(true);\n    });\n  });\n\n  describe(\"Populate index\", () => {\n    it(\"should create the index once the file has been read\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books).toBeDefined();\n    });\n    it(\"should return an object of all created index\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books).toEqual(jasmine.any(Object));\n    });\n    it(\"should return an array of a particular word showing indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      expect(invertedIndex.indexes.books.and).toEqual([0,1]);\n      expect(invertedIndex.indexes.books.of).toEqual([0,1]);\n    });\n  });\n\n  describe(\"Get Index\", () => {\n    it(\"should get the indexes of a particular uploaded file\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let getIndex = invertedIndex.getIndex(\"books\");\n      expect(getIndex).toBeDefined();\n    });\n    it(\"should return an empty object for an uploaded file that has not been indexed\", () => {\n      let getIndex = invertedIndex.getIndex(\"books\");\n      expect(getIndex).toEqual({});\n    });\n    it(\"should get all the indexes of all uploaded file\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      expect(Object.keys(getIndex).length).toBe(2);\n    });\n    it(\"should return an empty object if no indexes has been created\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      expect(Object.keys(getIndex).length).toBe(2);\n    });\n  });\n\n  describe(\"Search Index\", () => {\n    it(\"should return an array of the index of the words in the file and the word\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let getIndex = invertedIndex.getIndex(\"books\");\n      let searchIndex = invertedIndex.searchIndex(\"and\");\n      expect(searchIndex[0].and.books).toEqual([0,1]);\n    });\n    it(\"should return an array of Objects containing the search parameter, the files and their indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      let searchIndex = invertedIndex.searchIndex(\"and\");\n      expect(searchIndex[0].and.books).toEqual([0,1]);\n      expect(searchIndex[0].and.books1).toEqual([0,1]);\n    });\n    it(\"should return an array of Objects containing the search parameter in the selected file and its indexes\", () => {\n      let createIndex = invertedIndex.createIndex(\"books\", books);\n      let createIndex2 = invertedIndex.createIndex(\"books1\", books1);\n      let getIndex = invertedIndex.getIndex();\n      let searchIndex = invertedIndex.searchIndex(\"and\", \"books\");\n      let searchIndex2 = invertedIndex.searchIndex(\"and\", \"books1\");\n      expect(searchIndex[0].and).toEqual([0,1]);\n      expect(Object.keys(searchIndex[0]).length).toBe(1);\n      expect(searchIndex2[0].and).toEqual([0,1]);\n      expect(Object.keys(searchIndex2[0]).length).toBe(1);\n    });\n  });\n});\n\n\n// WEBPACK FOOTER //\n// ./jasmine/spec/inverted-index-test.js","/**\n *  InvertedIndex class constructor\n *  @class\n */\n\nclass InvertedIndex {\n  /**\n   *  class constructor\n   *  @constructor\n   */\n  constructor() {\n    this.indexes = {};\n  }\n\n\n  /**\n   * converts the string provided to lower case, strips the string of all \n   * special characters, extra spaces and converts the result into an Array\n   * @static \n   * @param {string} text the text to be converted\n   * @returns {Array} the result that will be returned after function call\n   */\n  static textToArray(text) {\n    const result = text.toLowerCase().replace(/[^a-z0-9\\s]/g, \"\").split(/\\s+/);\n    return result;\n  }\n\n\n  /**\n   * loops through an array and removes duplicate elements\n   * @static\n   * @param {}\n   * @returns {Array} \n   */\n  _sortIndex(bookName, arrayItem, element) {\n    element = parseInt(element);\n    for(let item in arrayItem) {\n      if(!this.indexes[bookName].hasOwnProperty([arrayItem[item]])) {\n        this.indexes[bookName][arrayItem[item]] = [];\n        this.indexes[bookName][arrayItem[item]].push(element); \n      } else if(\n        this.indexes[bookName].hasOwnProperty([arrayItem[item]]) && \n        this.indexes[bookName][arrayItem[item]].indexOf(element) === -1) {\n        this.indexes[bookName][arrayItem[item]].push(element);\n      }\n    }\n  }\n\n  /**\n   * reads the content of a json file and returns false if the file is empty or \n   * returns true if there are documents in the file.\n   * \n   */\n  readBookData(book) {\n    if(book.length < 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @function takes a file path as argument and read the contents of the file \n   * @param {string} name the name of the file\n   * @param {Array} content the content of the file\n   * @returns {Array} \n   */\n  createIndex(name, fileContent) {\n    if(!this.readBookData) {\n      return false;\n    } \n    const indexArray = [];\n    fileContent.forEach((item) => {\n      let text = item.title + \" \" + item.text;\n      let textArray = InvertedIndex.textToArray(text);\n      indexArray.push(textArray);\n    });\n    \n    if(!this.indexes[name]) {\n      this.indexes[name] = {};\n      for(let element in indexArray) {\n        let textIndex = indexArray[element];\n        this._sortIndex(name, textIndex, element);\n      }\n    }\n  }\n\n\n  /**\n   * @function takes an uploaded file as argument and read the contents of the\n   * file \n   * @returns {Object} \n   */\n  getIndex(name = null) {\n    if(Object.keys(this.indexes).length < 1 ) {\n      return {};\n    } else if(name === null) {\n      return this.indexes;\n    } else {\n      if(this.indexes[name]) {\n        return this.indexes[name];\n      }\n    }\n  }\n\n\n  /** \n   * @function return an object that contains the index of the search\n   * word and the files they can be found. \n   * @param {string} terms \n   * @returns {Object}\n   */\n\n  _getTermResult(answer, term, name) {\n    let indexFile = this.getIndex(name);\n    if(name === null) {\n      for(let key in indexFile) {\n        if(term in indexFile[key] && answer[term] === undefined) {\n          answer[term] = {};\n          answer[term][key] = indexFile[key][term];\n        } else if(term in indexFile[key] && answer.hasOwnProperty(term)) {\n          answer[term][key] = indexFile[key][term];\n        } else {\n          return \"Search text not found\";\n        }\n      }\n      return answer;  \n    } else if (indexFile !== undefined) {\n      if(term in this.indexes[name]) {\n        answer[term] = {};\n        answer[term] = this.indexes[name][term];\n        return answer;\n      }\n      return \"Search text not found\";\n    }\n  }\n\n\n  /** \n   * @function takes an array of arguments and returns an array of numbers that \n   * represents the index of the words\n   * @param {string} terms \n   * @returns {Array}\n   */\n   \n  searchIndex(terms, name = null) {\n    if (name && !this.indexes.hasOwnProperty(name)) {\n      return \"No such File\";\n    }\n    terms = InvertedIndex.textToArray(terms);\n    let result = [];\n    terms.forEach((term) => {\n      let fileResult = {};\n      let answer = this._getTermResult(fileResult, term, name);\n      result.push(answer);\n    });\n    return result;\n   }\n}\n\nmodule.exports = InvertedIndex\n\n\n// WEBPACK FOOTER //\n// ./jasmine/src/inverted-index.js","module.exports = [\n\t{\n\t\t\"title\": \"Alice in Wonderland\",\n\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t},\n\t{\n\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books.json\n// module id = 2\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"title\": \"Harry Porter and the prisoner of azkaban\",\n\t\t\"text\": \"Harry porter tries to eat rice and beans in the prisoner of azkaban.\"\n\t},\n\t{\n\t\t\"title\": \"The wizard of OZ.\",\n\t\t\"text\": \"A wizard comes to town with a powerful ring and falls into a rabbit hole.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books1.json\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}