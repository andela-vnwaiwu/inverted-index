{"version":3,"sources":["webpack:///webpack/bootstrap bcd8a798a8461bc1a73c","webpack:///./jasmine/spec/inverted-index-test.js","webpack:///./jasmine/books.json","webpack:///./jasmine/books1.json","webpack:///./jasmine/empty.json","webpack:///./jasmine/bad.json","webpack:///./jasmine/multi-array.json"],"names":["jsonFile","require","jsonFile1","emptyJson","badJson","deepFile","describe","invertedIndex","InvertedIndex","books","books1","empty","badFile","afterEach","indexes","it","indexInstance","expect","toEqual","jasmine","any","Object","keys","length","toBe","book","readBook","checkBookData","readBook2","wrongFormat","beforeEach","createIndex","toBeDefined","bookIndex","bookKeys","forEach","key","hasOwnProperty","call","toBeTruthy","and","of","emptyIndex","getIndex","toBeUndefined","searchIndex","because","fileList","file","toContain","Array","isArray","searchIndex2"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;AACA,KAAMA,WAAW,mBAAAC,CAAQ,CAAR,CAAjB;AACA,KAAMC,YAAY,mBAAAD,CAAQ,CAAR,CAAlB;AACA,KAAME,YAAY,mBAAAF,CAAQ,CAAR,CAAlB;AACA,KAAMG,UAAU,mBAAAH,CAAQ,CAAR,CAAhB;AACA,KAAMI,WAAW,mBAAAJ,CAAQ,CAAR,CAAjB;;AAEAK,UAAS,gBAAT,EAA2B,YAAM;AAC/B,OAAMC,gBAAgB,IAAIC,aAAJ,EAAtB;AACA,OAAMC,QAAQT,QAAd;AACA,OAAMU,SAASR,SAAf;AACA,OAAMS,QAAQR,SAAd;AACA,OAAMS,UAAUR,OAAhB;;AAEAS,aAAU,YAAM;AACdN,mBAAcO,OAAd,GAAwB,EAAxB;AACD,IAFD;;AAIAC,MAAG,yCAAH,EAA8C,YAAM;AAClD,SAAMC,gBAAgBT,aAAtB;AACAU,YAAOD,aAAP,EAAsBE,OAAtB,CAA8BC,QAAQC,GAAR,CAAYC,MAAZ,CAA9B;AACAJ,YAAOI,OAAOC,IAAP,CAAYf,cAAcO,OAA1B,EAAmCS,MAA1C,EAAkDC,IAAlD,CAAuD,CAAvD;AACD,IAJD;;AAMAlB,YAAS,gBAAT,EAA2B,YAAM;AAC/BS,QAAG,8EAAH,EAAmF,YAAM;AACvF,WAAMU,OAAO,EAAb;AACA,WAAMC,WAAWnB,cAAcoB,aAAd,CAA4BF,IAA5B,CAAjB;AACAR,cAAOS,QAAP,EAAiBF,IAAjB,CAAsB,KAAtB;AACD,MAJD;AAKAT,QAAG,uFAAH,EAA4F,YAAM;AAChG,WAAMa,YAAYrB,cAAcoB,aAAd,CAA4BlB,KAA5B,CAAlB;AACAQ,cAAOW,SAAP,EAAkBJ,IAAlB,CAAuB,IAAvB;AACD,MAHD;AAIAT,QAAG,0EAAH,EAA+E,YAAM;AACnF,WAAMa,YAAYrB,cAAcoB,aAAd,CAA4Bf,OAA5B,CAAlB;AACAK,cAAOW,SAAP,EAAkBJ,IAAlB,CAAuB,KAAvB;AACD,MAHD;AAIAT,QAAG,6EAAH,EAAkF,YAAM;AACtF,WAAMc,cAActB,cAAcoB,aAAd,CAA4BtB,QAA5B,CAApB;AACAY,cAAOY,WAAP,EAAoBL,IAApB,CAAyB,KAAzB;AACD,MAHD;AAID,IAlBD;;AAoBAlB,YAAS,gBAAT,EAA2B,YAAM;AAC/BwB,gBAAW,YAAM;AACfvB,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACD,MAFD;;AAIAM,QAAG,qDAAH,EAA0D,YAAM;AAC9DE,cAAOV,cAAcO,OAAd,CAAsBL,KAA7B,EAAoCuB,WAApC;AACD,MAFD;AAGAjB,QAAG,8CAAH,EAAmD,YAAM;AACvD,WAAMkB,YAAY1B,cAAcO,OAAd,CAAsBL,KAAxC;AACA,WAAMyB,WAAWb,OAAOC,IAAP,CAAYW,SAAZ,CAAjB;AACAC,gBAASC,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxBnB,gBAAO,GAAGoB,cAAH,CAAkBC,IAAlB,CAAuBL,SAAvB,EAAkCG,GAAlC,CAAP,EAA+CG,UAA/C;AACD,QAFD;AAGD,MAND;AAOAxB,QAAG,4DAAH,EAAiE,YAAM;AACrEE,cAAOV,cAAcO,OAAd,CAAsBL,KAAtB,CAA4B+B,GAAnC,EAAwCtB,OAAxC,CAAgD,CAAC,CAAD,EAAI,CAAJ,CAAhD;AACAD,cAAOV,cAAcO,OAAd,CAAsBL,KAAtB,CAA4BgC,EAAnC,EAAuCvB,OAAvC,CAA+C,CAAC,CAAD,EAAI,CAAJ,CAA/C;AACD,MAHD;AAIAH,QAAG,kDAAH,EAAuD,YAAM;AAC3D,WAAM2B,aAAanC,cAAcwB,WAAd,CAA0B,OAA1B,EAAmCpB,KAAnC,CAAnB;AACAM,cAAOyB,UAAP,EAAmBlB,IAAnB,CAAwB,KAAxB;AACD,MAHD;AAIAT,QAAG,wEAAH,EAA6E,YAAM;AACjFR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACAQ,cAAOI,OAAOC,IAAP,CAAYf,cAAcO,OAA1B,EAAmCS,MAA1C,EAAkDC,IAAlD,CAAuD,CAAvD;AACD,MAHD;AAID,IA3BD;;AA6BAlB,YAAS,WAAT,EAAsB,YAAM;AAC1BS,QAAG,sDAAH,EAA2D,YAAM;AAC/DR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACA,WAAMkC,WAAWpC,cAAcoC,QAAd,CAAuB,OAAvB,CAAjB;AACA1B,cAAO0B,QAAP,EAAiBX,WAAjB;AACD,MAJD;AAKAjB,QAAG,8EAAH,EAAmF,YAAM;AACvF,WAAM4B,WAAWpC,cAAcoC,QAAd,CAAuB,OAAvB,CAAjB;AACA1B,cAAO0B,QAAP,EAAiBzB,OAAjB,CAAyB,EAAzB;AACD,MAHD;AAIAH,QAAG,uCAAH,EAA4C,YAAM;AAChDR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACAF,qBAAcwB,WAAd,CAA0B,QAA1B,EAAoCrB,MAApC;AACA,WAAMiC,WAAWpC,cAAcoC,QAAd,EAAjB;AACA1B,cAAOI,OAAOC,IAAP,CAAYqB,QAAZ,EAAsBpB,MAA7B,EAAqCC,IAArC,CAA0C,CAA1C;AACD,MALD;AAMAT,QAAG,iEAAH,EAAsE,YAAM;AAC1ER,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACA,WAAMkC,WAAWpC,cAAcoC,QAAd,CAAuB,OAAvB,CAAjB;AACA1B,cAAO0B,QAAP,EAAiBC,aAAjB;AACD,MAJD;AAKD,IArBD;;AAuBAtC,YAAS,cAAT,EAAyB,YAAM;AAC7BS,QAAG,uDAAH,EAA4D,YAAM;AAChER,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACA,WAAMoC,cAActC,cAAcsC,WAAd,CAA0B,KAA1B,EAAiC,OAAjC,CAApB;AACA5B,cAAO4B,YAAY,CAAZ,EAAepC,KAAf,CAAqB+B,GAA5B,EAAiCtB,OAAjC,CAAyC,CAAC,CAAD,EAAI,CAAJ,CAAzC;AACD,MAJD;AAKAH,QAAG,qDAAH,EAA0D,YAAM;AAC9DR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACA,WAAMoC,cAActC,cAAcsC,WAAd,CAA0B,SAA1B,EAAqC,OAArC,CAApB;AACA5B,cAAO4B,YAAY,CAAZ,EAAepC,KAAf,CAAqBqC,OAA5B,EAAqCtB,IAArC,CAA0C,IAA1C;AACD,MAJD;AAKAT,QAAG,uEAAH,EAA4E,YAAM;AAChFR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACAF,qBAAcwB,WAAd,CAA0B,QAA1B,EAAoCrB,MAApC;AACA,WAAMqC,WAAW,CAAC,OAAD,EAAU,QAAV,CAAjB;AACA,WAAMF,cAActC,cAAcsC,WAAd,CAA0B,KAA1B,EAAiC,KAAjC,CAApB;AACAA,mBAAYV,OAAZ,CAAoB,UAACa,IAAD,EAAU;AAC5B/B,gBAAO8B,QAAP,EAAiBE,SAAjB,CAA2B5B,OAAOC,IAAP,CAAY0B,IAAZ,EAAkB,CAAlB,CAA3B;AACD,QAFD;AAGA/B,cAAOiC,MAAMC,OAAN,CAAcN,WAAd,CAAP,EAAmCN,UAAnC;AACD,MATD;AAUAxB,QAAG,qDAAH,EAA0D,YAAM;AAC9DR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACAF,qBAAcwB,WAAd,CAA0B,QAA1B,EAAoCrB,MAApC;AACA,WAAMmC,cAActC,cAAcsC,WAAd,CAA0B,SAA1B,EAAqC,KAArC,CAApB;AACA5B,cAAO4B,YAAY,CAAZ,EAAepC,KAAf,CAAqBqC,OAA5B,EAAqCtB,IAArC,CAA0C,IAA1C;AACAP,cAAO4B,YAAY,CAAZ,EAAenC,MAAf,CAAsBoC,OAA7B,EAAsCtB,IAAtC,CAA2C,IAA3C;AACD,MAND;AAOAT,QAAG,4FAAH,EAAiG,YAAM;AACrGR,qBAAcwB,WAAd,CAA0B,OAA1B,EAAmCtB,KAAnC;AACAF,qBAAcwB,WAAd,CAA0B,QAA1B,EAAoCrB,MAApC;AACA,WAAMmC,cAActC,cAAcsC,WAAd,CAA0B,KAA1B,EAAiC,OAAjC,CAApB;AACA,WAAMO,eAAe7C,cAAcsC,WAAd,CAA0B,KAA1B,EAAiC,QAAjC,CAArB;AACA5B,cAAO4B,YAAY,CAAZ,EAAepC,KAAf,CAAqB+B,GAA5B,EAAiCtB,OAAjC,CAAyC,CAAC,CAAD,EAAI,CAAJ,CAAzC;AACAD,cAAOI,OAAOC,IAAP,CAAYuB,YAAY,CAAZ,CAAZ,EAA4BtB,MAAnC,EAA2CC,IAA3C,CAAgD,CAAhD;AACAP,cAAOmC,aAAa,CAAb,EAAgB1C,MAAhB,CAAuB8B,GAA9B,EAAmCtB,OAAnC,CAA2C,CAAC,CAAD,EAAI,CAAJ,CAA3C;AACAD,cAAOI,OAAOC,IAAP,CAAY8B,aAAa,CAAb,CAAZ,EAA6B7B,MAApC,EAA4CC,IAA5C,CAAiD,CAAjD;AACD,MATD;AAUD,IAtCD;AAuCD,EAhID,E;;;;;;ACPA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,G;;;;;;ACTA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,G;;;;;;ACTA,qB;;;;;;ACAA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,G;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bcd8a798a8461bc1a73c","/* global InvertedIndex */\nconst jsonFile = require('../books');\nconst jsonFile1 = require('../books1');\nconst emptyJson = require('../empty');\nconst badJson = require('../bad');\nconst deepFile = require('../multi-array');\n\ndescribe('Inverted Index', () => {\n  const invertedIndex = new InvertedIndex();\n  const books = jsonFile;\n  const books1 = jsonFile1;\n  const empty = emptyJson;\n  const badFile = badJson;\n\n  afterEach(() => {\n    invertedIndex.indexes = {};\n  });\n\n  it('should return the instance of the class', () => {\n    const indexInstance = invertedIndex;\n    expect(indexInstance).toEqual(jasmine.any(Object));\n    expect(Object.keys(invertedIndex.indexes).length).toBe(0);\n  });\n\n  describe('Read book data', () => {\n    it('should read the content of a json file and return false if the file is empty', () => {\n      const book = [];\n      const readBook = invertedIndex.checkBookData(book);\n      expect(readBook).toBe(false);\n    });\n    it('should read the content of a json file and return true if the file matches the format', () => {\n      const readBook2 = invertedIndex.checkBookData(books);\n      expect(readBook2).toBe(true);\n    });\n    it('should return false if the content of the file is not an array of object', () => {\n      const readBook2 = invertedIndex.checkBookData(badFile);\n      expect(readBook2).toBe(false);\n    });\n    it('should return false if the content of the file is a multi-dimensional array', () => {\n      const wrongFormat = invertedIndex.checkBookData(deepFile);\n      expect(wrongFormat).toBe(false);\n    });\n  });\n\n  describe('Populate index', () => {\n    beforeEach(() => {\n      invertedIndex.createIndex('books', books);\n    });\n\n    it('should create the index once the file has been read', () => {\n      expect(invertedIndex.indexes.books).toBeDefined();\n    });\n    it('should return an object of all created index', () => {\n      const bookIndex = invertedIndex.indexes.books;\n      const bookKeys = Object.keys(bookIndex);\n      bookKeys.forEach((key) => {\n        expect({}.hasOwnProperty.call(bookIndex, key)).toBeTruthy();\n      });\n    });\n    it('should return an array that contains the indexes of a word', () => {\n      expect(invertedIndex.indexes.books.and).toEqual([0, 1]);\n      expect(invertedIndex.indexes.books.of).toEqual([0, 1]);\n    });\n    it('should return false if the file Content is Empty', () => {\n      const emptyIndex = invertedIndex.createIndex('empty', empty);\n      expect(emptyIndex).toBe(false);\n    });\n    it('should not create the index again if the file has been uploaded before', () => {\n      invertedIndex.createIndex('books', books);\n      expect(Object.keys(invertedIndex.indexes).length).toBe(1);\n    });\n  });\n\n  describe('Get Index', () => {\n    it('should get the indexes of a particular uploaded file', () => {\n      invertedIndex.createIndex('books', books);\n      const getIndex = invertedIndex.getIndex('books');\n      expect(getIndex).toBeDefined();\n    });\n    it('should return an empty object for an uploaded file that has not been indexed', () => {\n      const getIndex = invertedIndex.getIndex('books');\n      expect(getIndex).toEqual({});\n    });\n    it('should the length of all indexed file', () => {\n      invertedIndex.createIndex('books', books);\n      invertedIndex.createIndex('books1', books1);\n      const getIndex = invertedIndex.getIndex();\n      expect(Object.keys(getIndex).length).toBe(2);\n    });\n    it('should return undefined if no index has been created for a file', () => {\n      invertedIndex.createIndex('books', books);\n      const getIndex = invertedIndex.getIndex('book3');\n      expect(getIndex).toBeUndefined();\n    });\n  });\n\n  describe('Search Index', () => {\n    it('should return an array containing the index of a word', () => {\n      invertedIndex.createIndex('books', books);\n      const searchIndex = invertedIndex.searchIndex('and', 'books');\n      expect(searchIndex[0].books.and).toEqual([0, 1]);\n    });\n    it('should return null for a word not found in the file', () => {\n      invertedIndex.createIndex('books', books);\n      const searchIndex = invertedIndex.searchIndex('because', 'books');\n      expect(searchIndex[0].books.because).toBe(null);\n    });\n    it('should return an array of Objects with keys of all the files searched', () => {\n      invertedIndex.createIndex('books', books);\n      invertedIndex.createIndex('books1', books1);\n      const fileList = ['books', 'books1'];\n      const searchIndex = invertedIndex.searchIndex('and', 'all');\n      searchIndex.forEach((file) => {\n        expect(fileList).toContain(Object.keys(file)[0]);\n      });\n      expect(Array.isArray(searchIndex)).toBeTruthy();\n    });\n    it('should return null if a word is not found in a file', () => {\n      invertedIndex.createIndex('books', books);\n      invertedIndex.createIndex('books1', books1);\n      const searchIndex = invertedIndex.searchIndex('because', 'all');\n      expect(searchIndex[0].books.because).toBe(null);\n      expect(searchIndex[1].books1.because).toBe(null);\n    });\n    it('should return an array containing the indexes of the search parameter in the selected file', () => {\n      invertedIndex.createIndex('books', books);\n      invertedIndex.createIndex('books1', books1);\n      const searchIndex = invertedIndex.searchIndex('and', 'books');\n      const searchIndex2 = invertedIndex.searchIndex('and', 'books1');\n      expect(searchIndex[0].books.and).toEqual([0, 1]);\n      expect(Object.keys(searchIndex[0]).length).toBe(1);\n      expect(searchIndex2[0].books1.and).toEqual([0, 1]);\n      expect(Object.keys(searchIndex2[0]).length).toBe(1);\n    });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./jasmine/spec/inverted-index-test.js","module.exports = [\n\t{\n\t\t\"title\": \"Alice in Wonderland\",\n\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t},\n\t{\n\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books.json\n// module id = 1\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"title\": \"Harry Porter and the prisoner of azkaban\",\n\t\t\"text\": \"Harry porter tries to eat rice and beans in the prisoner of azkaban.\"\n\t},\n\t{\n\t\t\"title\": \"The wizard of OZ.\",\n\t\t\"text\": \"A wizard comes to town with a powerful ring and falls into a rabbit hole.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books1.json\n// module id = 2\n// module chunks = 0","module.exports = [];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/empty.json\n// module id = 3\n// module chunks = 0","module.exports = {\n\t\"file1\": {\n\t\t\"title\": \"Alice in Wonderland\",\n\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t},\n\t\"file2\": {\n\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/bad.json\n// module id = 4\n// module chunks = 0","module.exports = [\n\t[\n\t\t{\n\t\t\t\"file1\": {\n\t\t\t\t\"title\": \"Alice in Wonderland\",\n\t\t\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t{\n\t\t\t\"file2\": {\n\t\t\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t\t\t}\n\t\t}\n\t]\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/multi-array.json\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}